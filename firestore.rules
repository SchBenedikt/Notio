
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // PROFILE DATA: Users can read anyone's profile, but only write to their own.
    match /profiles/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // USER DATA (subjects, grades, settings, files, etc.):
    // Users can only access documents under their own user ID.
    // Limit upload size to 5MB to prevent abuse.
    match /users/{userId}/{document=**} {
      allow read, write, delete: if request.auth.uid == userId;
    }
    
    // POSTS: Authenticated users can read/create posts.
    // Only the author can update or delete their own post.
    match /posts/{postId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.authorId;
      // Allow deleting post and its comments in a batch
      allow delete: if request.auth.uid == resource.data.authorId;
      
      // COMMENTS: Authenticated users can read/create comments.
      // Only the author can update or delete their own comment.
      match /comments/{commentId} {
        allow read, create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.authorId;
      }
    }

    // SCHOOL DATA: Authenticated users can read/write events for their own school.
    // School list is readable by any authenticated user.
    match /schools/{schoolId} {
       allow read, create: if request.auth != null;

       match /events/{eventId} {
         allow read: if request.auth != null;
         allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)/settings/main).data.schoolId == schoolId;
         allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)/settings/main).data.schoolId == schoolId && request.auth.uid == resource.data.authorId;
       }
    }

    // TIMETABLE SHARES:
    match /timetableShares/{shareId} {
      // Anyone authenticated can read a share if they have the code.
      allow read: if request.auth != null;
      // Only the owner of the timetable can create a share document for their data.
      allow create: if request.auth.uid == request.resource.data.userId;
      // Shares are immutable and cannot be deleted/updated by clients.
      allow update, delete: if false;
    }
  }
}
