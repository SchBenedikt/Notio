rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write their own data.
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Authenticated users can see the list of all schools and add new ones.
    match /schools/{schoolId} {
      allow get, list: if request.auth != null;
      allow create: if request.auth != null;
    }

    // Rules for school-specific events.
    match /schools/{schoolId}/events/{eventId} {
      // Users can only read events from the school they belong to.
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)/settings/main).data.schoolId == schoolId;
      
      // Users can only create events for their own school and must be the author.
      allow create: if request.auth != null 
                    && get(/databases/$(database)/documents/users/$(request.auth.uid)/settings/main).data.schoolId == schoolId
                    && request.resource.data.authorId == request.auth.uid;
      
      // Only the author of an event can update or delete it.
      allow update, delete: if request.auth != null && resource.data.authorId == request.auth.uid;
    }

    // Rules for community posts and comments
    match /posts/{postId} {
      // Anyone authenticated can read posts
      allow get, list: if request.auth != null;
      // Users can only create posts for themselves
      allow create: if request.auth.uid == request.resource.data.authorId;
      // Users can only update their own posts (content) or like any post.
      allow update: if request.auth != null && (request.auth.uid == resource.data.authorId || request.auth.uid in request.resource.data.likes);
      // Users can only delete their own posts
      allow delete: if request.auth.uid == resource.data.authorId;

      match /comments/{commentId} {
         // Anyone authenticated can read comments
        allow get, list: if request.auth != null;
        // Users can create comments on any post if they are the author of the comment
        allow create: if request.auth.uid == request.resource.data.authorId;
        // Users can only update/delete their own comments
        allow update, delete: if request.auth.uid == resource.data.authorId;
      }
    }

    // Rules for public profiles
    match /profiles/{userId} {
      // Anyone authenticated can read any profile
      allow get, list: if request.auth != null;
      // Users can only create or update their own profile
      allow create, update: if request.auth.uid == userId;
    }
  }
}
